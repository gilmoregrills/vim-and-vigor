set nocompatible              " be iMproved, required
filetype off                  " required
filetype plugin on

" vim-plug plugin config:
call plug#begin()

Plug 'bling/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'fatih/vim-go'
Plug 'flazz/vim-colorschemes'
Plug 'mbbill/undotree'
Plug 'tpope/vim-surround'
Plug 'w0rp/ale'
Plug 'liuchengxu/vim-clap'
Plug 'preservim/nerdtree'
Plug 'hashivim/vim-terraform'

call plug#end()

set rtp+=/Users/robinyonge/code/git/codota/tabnine-vim

" nerdtree stuff
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
let NERDTreeShowHidden=1
let NERDTreeUseTCD=1
" let NERDTreeMinimalUI = 1
" let NERDTreeDirArrows = 1

" ale options
let g:airline#extensions#ale#enabled = 1
let g:ale_sign_column_always = 1

" hashivim options
let g:terraform_fmt_on_save=1

" keybindings
map <C-n> :NERDTreeToggle<CR>
nmap <F1> :NERDTreeToggle<CR>
nmap <F2> :NERDComComment<CR>
nmap <F3> :Clap files<CR>
noremap <PageUp> :tabprevious<CR>
noremap <PageDown> :tabnext<CR>
"Remove all trailing whitespace by pressing F5
nnoremap <F5> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar><CR>
cnoreabbrev <expr> W ((getcmdtype() is# ':' && getcmdline() is# 'W')?('w'):('W'))
command TCD tcd %:p:h
let g:clap_open_action = { 'ctrl-t': 'tab split', 'ctrl-s': 'split', 'ctrl-v': 'vsplit' }


syntax enable
au BufNewFile,BufRead Jenkinsfile setf groovy

" themeing:
set termguicolors
colorscheme fairyfloss
highlight Comment cterm=italic gui=italic
highlight Function cterm=italic gui=italic
highlight Keyword cterm=italic gui=italic
highlight Type cterm=italic gui=italic
highlight Class cterm=italic gui=italic
" "colorscheme soft-era
" colorscheme strawberry-light
let g:robin_airline = 1
let g:airline_theme = 'fairyfloss'
let g:clap_theme = { 'clap_display': {'guibg': '59', 'ctermbg': '#49483e'} }

" uncomment these lines to switch between colorschemes depending on mode if
" that's your thing
" au InsertLeave * colorscheme darkblue
" au InsertEnter * colorscheme molokai
set listchars=eol:¬,tab:>·,trail:~,extends:>,precedes:<,space:␣

set number

" gui settings
set guifont=Dank\ Mono:h14

" set indentation widths
set tabstop=2 shiftwidth=2 expandtab softtabstop=2

" start a new line and autoindent where lines are too long
" set autoindent
" set textwidth=100
set nowrap

" fix error where vim cannot backspace
set bs=2

" set Explore/netrw settings
" let g:netrw_liststyle = 1
" let g:netrw_browse_split = 4
" let g:netrw_altv = 1
" let g:netrw_winsize = 20
" autocmd VimEnter * :Vexplore

" set current window/buffer working dir to dir of file?
autocmd TabNew,TabNewEntered * :tcd %:p:h



" working on my own nvim plugin in go
if exists('g:loaded_tweet')
    finish
endif
let g:loaded_tweet = 1

function! s:Requiretweet(host) abort
    " 'tweet' is the binary created by compiling the program above.
    return jobstart(['tweet'], {'rpc': v:true})
endfunction

call remote#host#Register('tweet', 'x', function('s:Requiretweet'))
" The following lines are generated by running the program
" command line flag --manifest tweet
call remote#host#RegisterPlugin('tweet', '0', [
    \ {'type': 'function', 'name': 'Tweet', 'sync': 1, 'opts': {}},
    \ ])

source ~/.vim/init.vim
